stages:
  - build
  - deploy_staging
  - release

# Job que construye los artefactos
build-job:
  stage: build
  tags:
    - GitLabRunner
  script:
    - mkdir -p dist
    - echo "Contenido del módulo" > dist/prueba_module.txt
  artifacts:
    paths:
      - dist/
    expire_in: 1 day
  only:
    - main

# Job que despliega a staging
deploy-staging:
  stage: deploy_staging
  tags:
    - GitLabRunner
  dependencies:
    - build-job
  environment:
    name: staging
  script:
    - echo "Desplegando en staging..."
    - ssh-keyscan -H "$ODOO_PRUEBAS_HOST" > known_hosts
    - sshpass -p "$ODOO_RRUEBAS_PASSWORD" scp -r -v -o UserKnownHostsFile=known_hosts dist/prueba_module.txt "$ODOO_PRUEBAS_USER@$ODOO_PRUEBAS_HOST:$DEST_PATH"
  only:
    - main

# Job que crea el release
release-job:
  stage: release
  tags:
    - GitLabRunner
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build-job
  script:
    - echo "Creando release desde CI/CD"
  release:
    tag_name: "v1.0.$CI_PIPELINE_ID"
    name: "Staging Release v1.0.$CI_PIPELINE_ID"
    description: "Despliegue automático a staging desde el pipeline '$CI_PIPELINE_ID'"
    ref: main
    assets:
      links:
        - name: "Descargar módulo"
          url: "$CI_PROJECT_URL/-/jobs/$BUILD_JOB_ID/artifacts/file/dist/prueba_module.txt"
  variables:
    BUILD_JOB_ID: $CI_JOB_ID_BUILD_JOB
  before_script:
    - apk add --no-cache jq curl
    - |
      export BUILD_JOB_ID=$(curl -s --header "PRIVATE-TOKEN: $CI_JOB_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/pipelines/$CI_PIPELINE_ID/jobs" | jq -r '.[] | select(.name=="build-job") | .id')
      if [ -z "$BUILD_JOB_ID" ]; then echo "Error: Could not fetch build-job ID"; exit 1; fi
  only:
    - main
